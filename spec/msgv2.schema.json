{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "https://m10k.eu/foundry/schema/msg.v2.schema.json",
	"title": "Foundry V2 IPC Message",
	"type": "object",

	"properties": {
		"version": {
			"description": "Version of the foundry message format used",
			"type": "integer"
		},

		"type": {
			"description": "The message type encapsulated in this object",
			"enum": [
				"foundry.msg.source.new",
				"foundry.msg.source.modified",
				"foundry.msg.build.request",
				"foundry.msg.build.result"
			]
		}
	},

	"allOf": [
		{
			"if": {
				"properties": {
					"type": { "const": "foundry.msg.source.new" }
				}
			},
			"then": {
				"properties": {
					"message": {
						"$ref": "#/$defs/msg_source_new"
					}
				}
			}
		}, {
			"if": {
				"properties": {
					"type": { "const": "foundry.msg.source.modified" }
				}
			},
			"then": {
				"properties": {
					"message": {
						"$ref": "#/$defs/msg_source_modified"
					}
				}
			}
		}, {
			"if": {
				"properties": {
					"type": { "const": "foundry.msg.build.request" }
				}
			},
			"then": {
				"properties": {
					"message": {
						"$ref": "#/$defs/msg_build_request"
					}
				}
			}
		}, {
			"if": {
				"properties": {
					"type": { "const": "foundry.msg.build.result" }
				}
			},
			"then": {
				"properties": {
					"message": {
						"$ref": "#/$defs/msg_build_result"
					}
				}
			}
		}
	],

	"required": [
		"version",
		"type",
		"message"
	],

	"$defs": {
		"msg_source_new": {
			"description": "New source notification",
			"type": "object",

			"properties": {
				"sources": {
					"description": "The sources that have been detected",
					"type": "array",
					"items": {
						"$ref": "#/$defs/sourceref"
					},
					"minItems": 1,
					"uniqueItems": true
				}
			},
			"required": [
				"sources"
			]
		},

		"msg_source_modified": {
			"description": "Notification that a source has been modified",
			"type": "object",

			"properties": {
				"old": {
					"description": "Sourceref before the modification was detected",
					"type": {
						"$ref": "#/$defs/sourceref"
					}
				},

				"new": {
					"description": "Sourceref after the modification was detected",
					"type": {
						"$ref": "#/$defs/sourceref"
					}
				}
			},
			"required": [
				"new"
			]
		},

		"msg_build_request": {
			"description": "Build request message",
			"type": "object",

			"properties": {
				"sources": {
					"description": "The sources that are requested to be build",
					"type": "array",
					"items": {
						"$ref": "#/$defs/sourceref"
					},
					"minItems": 1,
					"uniqueItems": true
				},

				"distribution": {
					"description": "The distribution for the build request",
					"type": "string"
				},

				"architectures": {
					"description": "The architectures for which the sources are requested to be built",
					"type": "array",
					"items": {
						"$ref": "#/$defs/architecture"
					},
					"minItems": 1,
					"uniqueItems": true
				}
			},

			"required": [
				"sources"
			]
		},

		"msg_build_result": {
			"description": "Message containing the result of a build step",
			"type": "object",

			"properties": {
				"status": {
					"description": "Exit status of the build process",
					"type": "integer"
				},

				"context": {
					"description": "Context identifier",
					"type": "string"
				},

				"builds": {
					"description": "Results of each performed build",
					"type": "array",
					"items": {
						"$ref": "#/$defs/build_result"
					},
					"minItems": 1,
					"uniqueItems": true
				},

				"host": {
					"description": "Name of the host that performed the build",
					"type": {
						"$ref": "#/$defs/hostinfo"
					}
				},

				"process": {
					"description": "Name of the process that performed the build",
					"type": "string"
				},

				"stats": {
					"description": "Statistics about the build process",
					"type": {
						"$ref": "#/$defs/build_stats"
					}
				}
			},

			"required": [
				"status",
				"context",
				"builds",
				"host",
				"process",
				"stats"
			]
		},

		"sourceref": {
			"description": "Reference to a package source",
			"type": "object",

			"properties": {
				"type": {
					"description": "The type of source that is referred to",
					"enum": [
						"git",
						"srpm"
					]
				}
			},

			"allOf": [
				{
					"if": {
						"properties": {
							"type": { "const": "git" }
						}
					},
					"then": {
						"properties": {
							"repository": {
								"description": "URL of the git repository",
								"type": "string",
								"format": "uri"
							},

							"branch": {
								"description": "Name of the branch that contains the referenced commit",
								"type": "string"
							},

							"commit": {
								"description": "Hex-encoded hash of the referenced commit",
								"type": "string",
								"pattern": "^[0-9a-fA-F]+$"
							},

							"uri": {
								"description": "URI pointing to the referenced sources (ex: git+https://github.com/m10k/foundry@unstable)",
								"type": "string",
								"format": "uri"
							}
						}
					}
				}, {
					"if": {
						"properties": {
							"type": { "const": "srpm" }
						}
					},
					"then": {
						"properties": {
							"uri": {
								"description": "The address from which the SRPM can be obtained",
								"type": "string",
								"format": "uri"
							},

							"checksum": {
								"description": "The checksum of the SRPM file",
								"type": {
									"$ref": "#/$defs/checksum"
								}
							},

							"distribution": {
								"description": "The distribution to which the SRPM belongs",
								"type": "string"
							}
						}
					}
				}
			],

			"required": [
				"type",
				"uri"
			]
		},

		"checksum": {
			"description": "Generic description of a checksum",
			"type": "object",

			"properties": {
				"algorithm": {
					"description": "The algorithm used to compute the checksum",
					"enum": [
						"sha256",
						"sha512"
					]
				},

				"data": {
					"description": "Checksum in hexadecimal encoding",
					"type": "string",
					"pattern": "^[0-9a-fA-F]+$"
				}
			},

			"required": [
				"algorithm",
				"data"
			]
		},

		"architecture": {
			"description": "Architectures of a build request or artifact",
			"enum": [
				"i386",
				"amd64",
				"riscv64",
				"arm64"
			]
		},

		"hostinfo": {
			"description": "Basic information about a host",
			"type": "object",

			"properties": {
				"name": {
					"description": "FQDN of the host",
					"type": "string"
				},

				"arch": {
					"description": "Architecture of the host",
					"type": {
						"$ref": "#/$defs/architecture"
					}
				},

				"machine": {
					"description": "Architecture as reported by uname -m",
					"type": "string"
				},

				"cpus": {
					"description": "Number of CPUs in the machine",
					"type": "integer"
				},

				"model": {
					"description": "Human-readable description of the CPU",
					"type": "string"
				},

				"memory": {
					"description": "Total amount of memory (kB)",
					"type": "integer"
				}
			},

			"required": [
				"name",
				"arch",
				"machine",
				"cpus",
				"model"
			]
		},

		"build_result": {
			"description": "Results of the build process",
			"type": "object",

			"properties": {
				"sourceref": {
					"description": "The sources that were built in the process",
					"type": {
						"$ref": "#/$defs/sourceref"
					}
				},

				"artifacts": {
					"description": "The build results",
					"type": {
						"$ref": "#/$defs/directory"
					}
				}
			},

			"required": [
				"sourceref",
				"artifacts"
			]
		},

		"build_stats": {
			"description": "Statistics about the build process",
			"type": "object",

			"properties": {
				"start_time": {
					"description": "Date and time when the build process started",
					"type": "string",
					"format": "date-time"
				},

				"end_time": {
					"description": "Date and time when the build process finished",
					"type": "string",
					"format": "date-time"
				},

				"memory": {
					"description": "Amount of memory (in KB) the build process used",
					"type": "integer"
				},

				"disk": {
					"description": "Amount of disk space (in KB) the build process used",
					"type": "integer"
				}
			},

			"required": [
				"start_time",
				"end_time",
				"memory",
				"disk"
			]
		},

		"directory": {
			"description": "Group of build results",
			"type": "object",

			"properties": {
				"name": {
					"description": "Name of the directory",
					"type": "string"
				},

				"contents": {
					"description": "Contents of the directory",
					"type": "array",
					"items": {
						"$ref": "#/$defs/file"
					},
					"minItems": 1,
					"uniqueItems": true
				}
			},

			"required": [
				"name",
				"contents"
			]
		},

		"file": {
			"description": "File created by a build process",
			"type": "object",

			"properties": {
				"name": {
					"description": "Name of the file",
					"type": "string"
				},

				"checksum": {
					"description": "Checksum of the file",
					"type": {
						"$ref": "#/$defs/checksum"
					}
				}
			},

			"required": [
				"name",
				"checksum"
			]
		}
	}
}
